{
  "setup_function": "\n-- Neovim built-in LSP setup for Prolog\nlocal lspconfig = require('lspconfig')\nlocal configs = require('lspconfig.configs')\n\n-- Define Prolog LSP configuration\nif not configs.prolog_lsp then\n  configs.prolog_lsp = {\n    default_config = {\n      cmd = {'node', './out/pub/features/prologLSPServer.js', '--stdio'},\n      filetypes = {'prolog'},\n      root_dir = lspconfig.util.root_pattern('.git', '*.pl', '*.pro', '*.prolog'),\n      settings = {\n        prolog = {\n          executablePath = 'swipl',\n          dialect = 'swi',\n          linter = {\n            run = 'onType',\n            delay = 500\n          }\n        }\n      }\n    }\n  }\nend\n\n-- Setup the LSP\nlspconfig.prolog_lsp.setup({\n  on_attach = function(client, bufnr)\n    -- Enable completion triggered by <c-x><c-o>\n    vim.api.nvim_buf_set_option(bufnr, 'omnifunc', 'v:lua.vim.lsp.omnifunc')\n    \n    -- Mappings\n    local opts = { noremap=true, silent=true }\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gD', '<cmd>lua vim.lsp.buf.declaration()<CR>', opts)\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gd', '<cmd>lua vim.lsp.buf.definition()<CR>', opts)\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', 'K', '<cmd>lua vim.lsp.buf.hover()<CR>', opts)\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gi', '<cmd>lua vim.lsp.buf.implementation()<CR>', opts)\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', '<C-k>', '<cmd>lua vim.lsp.buf.signature_help()<CR>', opts)\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>rn', '<cmd>lua vim.lsp.buf.rename()<CR>', opts)\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>ca', '<cmd>lua vim.lsp.buf.code_action()<CR>', opts)\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gr', '<cmd>lua vim.lsp.buf.references()<CR>', opts)\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>f', '<cmd>lua vim.lsp.buf.formatting()<CR>', opts)\n  end,\n  capabilities = require('cmp_nvim_lsp').update_capabilities(vim.lsp.protocol.make_client_capabilities())\n})\n      ",
  "filetype_detection": "\n-- Add Prolog filetype detection\nvim.cmd([[\n  augroup PrologFiletype\n    autocmd!\n    autocmd BufRead,BufNewFile *.pl,*.pro,*.prolog,*.plt,*.ecl set filetype=prolog\n  augroup END\n]])\n      "
}